% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dLogGamma.R
\name{dLogGamma}
\alias{dLogGamma}
\alias{rLogGamma}
\title{Log transformed gamma distribution.}
\usage{
dLogGamma(x, shape = 1, scale = 1, log = 0)

rLogGamma(n = 1, shape = 1, scale = 1)
}
\arguments{
\item{x}{A continuous random varaible on the real line. Let y=exp(x). Then y ~ dgamma(shape,scale).}

\item{shape}{Shape parameter of y ~ dgamma(shape,scale).}

\item{scale}{Scale parameter of y ~ dgamma(shape,scale).}

\item{log}{Logical flag to toggle returning the log density.}

\item{n}{Number of random variables. Currently limited to 1, as is common in nimble. See ?replicate for an alternative.}
}
\value{
The density or log density of x, such that x = log(y) and y ~ dgamma(shape,scale).
}
\description{
\code{dLogGamma} and \code{rLogGamma} provide a log-transformed gamma distribution.
}
\examples{

n      = 100000
shape = 3
scale = 6
y      = rgamma(n=n, shape=shape, scale=scale)
x      = log(y)

par(mfrow=n2mfrow(2))
## Plot 1
hist(x, n=100, freq=FALSE)
curve(dLogGamma(x, shape=shape, scale=scale), -15, 4, n=1001, col="red", add=TRUE, lty=3)
## Plot 2: back-transformed
xNew = replicate(n=n, rLogGamma(n=1, shape=shape, scale=scale))
yNew   = exp(xNew)
hist(yNew, n=100, freq=FALSE, xlab="exp(x)")
curve(dexp(x, shape=shape, scale=scale), 0, 4, n=1001, col="red", lwd=3, add=TRUE)

code = nimbleCode({
  x ~ dLogGamma(shape=shape, scale=scale)
})
modelR = nimbleModel(code=code)
modelC = compileNimble(modelR)
conf  = configureMCMC(modelC)
mcmc  = buildMCMC(conf=conf)
cMcmc = compileNimble(mcmc)
x = as.vector(runMCMC(mcmc=cMcmc, niter=50000))
par(mfrow=n2mfrow(3))
## Plot 1: MCMC trajectory
plot(x, typ="l")
hist(x, n=100, freq=FALSE)
curve(dLogGamma(x, shape=shape, scale=scale), -15, 5, n=1001, col="red", lwd=3, add=TRUE)
## Plot 3: taget density on bounded scale
hist(exp(x), n=100, freq=FALSE)
curve(dexp(x, shape=shape, scale=scale), 0, 25, n=1001, col="red", lwd=3, add=TRUE)
}
\author{
David R.J. Pleydell
}
